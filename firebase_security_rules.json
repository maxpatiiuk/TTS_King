{
  "rules": {
    ".read": false,
    ".write": false,
    "users": {
      "$userId": {
        ".write": "newData.hasChildren(
                     [
                       'subscribeToNewsletter',
                       'sources',
                       'postsContent',
                       'listeningStats',
                       'totalStats',
                       'deletedPostsMeta',
                       'deletedPostsContent',
                     ]
                   )",
        ".read": "$userId === auth.uid",
        "$other": {
          ".validate": false,
        },
        "subscribeToNewsletter": {
          ".validate": "newData.isBoolean()",
        },
        "sources": {
          "$sourceName": {
            ".write": "newData.exists() &&
                       newData.hasChildren(
                            [
                              'subscribed',
                              'priority',
                              'postsMeta',
                              'postsContent',
                            ]
                       )",
            "$other": {
              ".validate": false,
             },
            "subscribed": {
              ".validate": "newData.isBoolean()",
            },
            "priority": {
              ".validate": "(newData.isNumber() && newData.val() > 1) || newData.val() === false",
            },
            "postsMeta": {
              "$postId": {
                ".write": "newData.hasChildren(['preview'])",
                ".validate": "root.child(
                                'users/'
                                  + $userId
                                  + '/postsContent/'
                                  + $postId
                              ).exists() &&
                              (
                                $sourceName != 'url' ||
                                newData.hasChild('sourceUrl')
                              ) &&
                              (
                                $sourceName != 'file' ||
                                newData.hasChild('fileName')
                              )",
                ".indexOn": ["preview"],
                "$other": {
                    ".validate": false,
                 },
                "sourceUrl": {
                  ".validate": "$sourceName === 'url' && newData.isString()",
                },
                "fileName": {
                  ".validate": "$sourceName === 'file' && newData.isString()",
                },
                "preview": {
                  ".validate": "newData.isString() &&
                                newData.val().length !== 0 &&
                                newData.val().length < 50",
                },
              },
            },
          },
        },
        "postsContent": {
          "$postId": {
            ".validate": "newData.isString() && newData.val().length !== 0",
          },
        },
        "listeningStats": {
          "$year": {
            ".validate": "$year >= 2021 && $year <= 3000",
            "$month": {
              ".validate": "$month >= 1 && $month <= 12 && newData.isNumber() && newData.val() > 0",
              "$category": {
                ".validate": "$category === 'posts' ||
                              $category === 'paragraphs' ||
                              $category === 'words' ||
                              $category === 'characters'",
                ".write": "(
                              !data.exists() ||
                              data.val() <= newData.val()
                           ) &&
                           newData.isNumber()",
              }
            },
          },
        },
        "totalStats": {
          "queuedPosts": {
            ".validate": "newData.isNumber()",
          },
          "$category": {
            ".validate": "$category === 'posts' ||
                          $category === 'paragraphs' ||
                          $category === 'words' ||
                          $category === 'characters'",
            ".write": "(
                          !data.exists() ||
                          data.val() <= newData.val()
                       ) &&
                       newData.isNumber()",
          }
        },
        "deletedPostsMeta": {
          "$postId": {
            ".write": "newData.hasChildren(['preview', 'sourceName'])",
            ".validate": "root.child(
                            'users/'
                              + $userId
                              + '/deletedPostsContent/'
                              + $postId
                          ).exists() &&
                          (
                            newData.parent().child('sourceName').val() != 'url' ||
                            newData.hasChild('sourceUrl')
                          ) &&
                          (
                            newData.parent().child('sourceName').val() != 'file' ||
                            newData.hasChild('fileName')
                          )",
            ".indexOn": ["preview"],
            "$other": {
              ".validate": false,
            },
            "sourceName": {
              ".validate": "newData.isString() &&
                            root.child('users/' + $userId + '/sources/' + newData.val()).exists()",
            },
            "sourceUrl": {
              ".validate": "newData.parent().child('sourceName').val() === 'url' &&
                            newData.isString()",
            },
            "fileName": {
              ".validate": "newData.parent().child('sourceName').val() === 'file' &&
                            newData.isString()",
            },
            "preview": {
              ".validate": "newData.isString() &&
                            newData.val().length !== 0 &&
                            newData.val().length < 50",
            },
          },
        },
        "deletedPostsContent": {
          "$postId": {
            ".validate": "newData.isString() && newData.val().length !== 0",
          }
        },
      },
    },
  },
}
